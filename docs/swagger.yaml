basePath: /
definitions:
  requestmodels.ContactInfo:
    properties:
      Mail:
        type: string
      Phone:
        type: string
    type: object
  requestmodels.Incident:
    properties:
      Description:
        type: string
      Landlord:
        type: string
      Status:
        type: integer
      Tenant:
        type: string
      Type:
        type: integer
    type: object
  requestmodels.Invite:
    properties:
      Landlord:
        type: string
      Property:
        type: string
      Tenant:
        type: string
    type: object
  requestmodels.MarketProfile:
    properties:
      AvailabilityDate:
        type: string
      Deposit:
        type: number
      Description:
        type: string
      HeatPrice:
        type: number
      MinimumIncome:
        type: number
      MinimumPeriod:
        type: integer
      Period:
        type: integer
      PowerPrice:
        type: number
      Rent:
        type: number
    type: object
  requestmodels.Property:
    properties:
      Apartment:
        type: string
      Balcony:
        type: boolean
      City:
        type: string
      Country:
        type: string
      Garage:
        type: boolean
      Garden:
        type: boolean
      HeatType:
        type: integer
      Housenumber:
        type: string
      Landlord:
        type: string
      Rooms:
        type: integer
      Size:
        type: integer
      Status:
        type: integer
      Street:
        type: string
      Tenant:
        type: string
      Type:
        type: integer
    type: object
  requestmodels.RentProfile:
    properties:
      ContractDue:
        type: string
      Deposit:
        type: number
      HeatCosts:
        type: number
      Minimum:
        type: integer
      Rent:
        type: number
      RentalStart:
        type: string
    type: object
  requestmodels.SearchProfile:
    properties:
      Budget:
        type: number
      City:
        type: string
      Country:
        type: string
      Radius:
        type: number
      Rooms:
        type: integer
      Size:
        type: integer
      Street:
        type: string
      Type:
        type: integer
      Zipcode:
        type: string
    type: object
  requestmodels.TenantInfo:
    properties:
      CriminalRecord:
        type: boolean
      Income:
        type: number
      IncomeProof:
        type: boolean
    type: object
  requestmodels.User:
    properties:
      Apartment:
        type: string
      City:
        type: string
      Country:
        type: string
      First:
        type: string
      Housenumber:
        type: string
      Id:
        type: string
      Last:
        type: string
      Mail:
        type: string
      Phone:
        type: string
      Street:
        type: string
    type: object
  responsemodels.Incident:
    properties:
      Description:
        type: string
      Id:
        type: string
      Landlord:
        type: string
      Property:
        type: string
      Status:
        type: integer
      Tenant:
        type: string
      Type:
        type: integer
    type: object
  responsemodels.MarketProfile:
    properties:
      AvailabilityDate:
        type: string
      Deposit:
        type: number
      Description:
        type: string
      HeatPrice:
        type: number
      Id:
        type: string
      MinimumIncome:
        type: number
      MinimumPeriod:
        type: integer
      Period:
        type: integer
      PowerPrice:
        type: number
      Rent:
        type: number
    type: object
  responsemodels.Property:
    properties:
      Apartment:
        type: string
      Balcony:
        type: boolean
      City:
        type: string
      Country:
        type: string
      Garage:
        type: boolean
      Garden:
        type: boolean
      HeatType:
        type: integer
      Housenumber:
        type: string
      Id:
        type: string
      Landlord:
        type: string
      Rooms:
        type: integer
      Size:
        type: integer
      Status:
        type: integer
      Street:
        type: string
      Tenant:
        type: string
      Type:
        type: integer
    type: object
  responsemodels.RentProfile:
    properties:
      ContractDue:
        type: string
      Deposit:
        type: number
      HeatCosts:
        type: number
      Id:
        type: string
      Minimum:
        type: integer
      Rent:
        type: number
      RentalStart:
        type: string
    type: object
  responsemodels.SearchProfile:
    properties:
      Budget:
        type: number
      City:
        type: string
      Country:
        type: string
      Radius:
        type: number
      Rooms:
        type: integer
      Size:
        type: integer
      Street:
        type: string
      Type:
        type: integer
      UserId:
        type: string
      Zipcode:
        type: string
    type: object
  responsemodels.TenantInfo:
    properties:
      CriminalRecord:
        type: boolean
      Id:
        type: string
      Income:
        type: number
      IncomeProof:
        type: boolean
    type: object
  responsemodels.User:
    properties:
      Apartment:
        type: string
      City:
        type: string
      Country:
        type: string
      First:
        type: string
      Housenumber:
        type: string
      Id:
        type: string
      Last:
        type: string
      Mail:
        type: string
      Phone:
        type: string
      Street:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Swagger Example API
  version: "2.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /incident/{propertyId}:
    get:
      consumes:
      - application/json
      description: Get all incidents
      parameters:
      - description: Property ID
        in: path
        name: propertyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            items:
              $ref: '#/definitions/responsemodels.Incident'
            type: array
      summary: Get all incidents
      tags:
      - Property Incident
  /incident/{propertyId}/{incidentId}:
    delete:
      consumes:
      - application/json
      description: Delete an incident
      parameters:
      - description: Incident ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete an incident
      tags:
      - Property Incident
    get:
      consumes:
      - application/json
      description: Get an incident
      parameters:
      - description: Incident ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/responsemodels.Incident'
      summary: Get an incident
      tags:
      - Property Incident
    put:
      consumes:
      - application/json
      description: Update an incident
      parameters:
      - description: Incident ID
        in: path
        name: id
        required: true
        type: string
      - description: Incident
        in: body
        name: incident
        required: true
        schema:
          $ref: '#/definitions/requestmodels.Incident'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update an incident
      tags:
      - Property Incident
  /incidents/{propertyId}:
    post:
      consumes:
      - application/json
      description: Create a new incident
      parameters:
      - description: Incident
        in: body
        name: incident
        required: true
        schema:
          $ref: '#/definitions/requestmodels.Incident'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new incident
      tags:
      - Property Incident
  /property:
    get:
      consumes:
      - application/json
      description: Get all properties
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responsemodels.Property'
            type: array
      summary: Get all properties
      tags:
      - Property
    post:
      consumes:
      - application/json
      description: Create a new property
      parameters:
      - description: Property
        in: body
        name: property
        required: true
        schema:
          $ref: '#/definitions/requestmodels.Property'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.Property'
      summary: Create a new property
      tags:
      - Property
  /property/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a property
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a property
      tags:
      - Property
    get:
      consumes:
      - application/json
      description: Get a property
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.Property'
      summary: Get a property
      tags:
      - Property
    put:
      consumes:
      - application/json
      description: Update a property
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      - description: Property
        in: body
        name: property
        required: true
        schema:
          $ref: '#/definitions/requestmodels.Property'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.Property'
      summary: Update a property
      tags:
      - Property
  /property/invite/{id}/{userId}:
    post:
      consumes:
      - application/json
      description: Accept an invite
      parameters:
      - description: Invite ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.Property'
      summary: Accept an invite
      tags:
      - Property Invite
  /property/invite/{propertyId}:
    put:
      consumes:
      - application/json
      description: Create an invite
      parameters:
      - description: Invite
        in: body
        name: invite
        required: true
        schema:
          $ref: '#/definitions/requestmodels.Invite'
      - description: Property ID
        in: path
        name: propertyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: InviteId
          schema:
            type: string
      summary: Create an invite
      tags:
      - Property Invite
  /property/landlord/{id}/{landlordId}:
    put:
      consumes:
      - application/json
      description: Update a property landlord
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      - description: Landlord ID
        in: path
        name: landlordId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update a property landlord
      tags:
      - Property
  /property/marketprofile/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a market profile
      parameters:
      - description: Market Profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a market profile
      tags:
      - Property Market Profile
    get:
      consumes:
      - application/json
      description: Get a market profile
      parameters:
      - description: Market Profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/responsemodels.MarketProfile'
      summary: Get a market profile
      tags:
      - Property Market Profile
    post:
      consumes:
      - application/json
      description: Create a new market profile
      parameters:
      - description: Market Profile
        in: body
        name: marketProfile
        required: true
        schema:
          $ref: '#/definitions/requestmodels.MarketProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.MarketProfile'
      summary: Create a new market profile
      tags:
      - Property Market Profile
    put:
      consumes:
      - application/json
      description: Update a market profile
      parameters:
      - description: Market Profile ID
        in: path
        name: id
        required: true
        type: string
      - description: Market Profile
        in: body
        name: marketProfile
        required: true
        schema:
          $ref: '#/definitions/requestmodels.MarketProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.MarketProfile'
      summary: Update a market profile
      tags:
      - Property Market Profile
  /property/marketprofiles:
    get:
      consumes:
      - application/json
      description: Get all market profiles
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            items:
              $ref: '#/definitions/responsemodels.MarketProfile'
            type: array
      summary: Get all market profiles
      tags:
      - Property Market Profile
  /property/rentprofile/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a rent profile
      operationId: delete-rent-profile
      parameters:
      - description: Rent Profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a rent profile
      tags:
      - Property Rent Profile
    get:
      consumes:
      - application/json
      description: Get a rent profile
      operationId: get-rent-profile
      parameters:
      - description: Rent Profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/responsemodels.RentProfile'
      summary: Get a rent profile
      tags:
      - Property Rent Profile
    post:
      consumes:
      - application/json
      description: Create a rent profile
      operationId: create-rent-profile
      parameters:
      - description: Rent Profile
        in: body
        name: rentProfile
        required: true
        schema:
          $ref: '#/definitions/requestmodels.RentProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.RentProfile'
      summary: Create a rent profile
      tags:
      - Property Rent Profile
    put:
      consumes:
      - application/json
      description: Update a rent profile
      operationId: update-rent-profile
      parameters:
      - description: Rent Profile ID
        in: path
        name: id
        required: true
        type: string
      - description: Rent Profile
        in: body
        name: rentProfile
        required: true
        schema:
          $ref: '#/definitions/requestmodels.RentProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.RentProfile'
      summary: Update a rent profile
      tags:
      - Property Rent Profile
  /property/tenant/{id}/{tenantId}:
    put:
      consumes:
      - application/json
      description: Update a property tenant
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: string
      - description: Tenant ID
        in: path
        name: tenantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update a property tenant
      tags:
      - Property
  /user:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            items:
              $ref: '#/definitions/responsemodels.User'
            type: array
      summary: Get all users
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/responsemodels.User'
      summary: Get a user
      tags:
      - User
  /user/contactinfo/{id}:
    put:
      consumes:
      - application/json
      description: Update a user's contact info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Contact Info
        in: body
        name: contactInfo
        required: true
        schema:
          $ref: '#/definitions/requestmodels.ContactInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.User'
      summary: Update a user's contact info
      tags:
      - User
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requestmodels.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responsemodels.User'
      summary: Create a new user
      tags:
      - User
  /user/searchprofile/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user's search profile
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a user's search profile
      tags:
      - User Search Profile
    get:
      consumes:
      - application/json
      description: Get a user's search profile
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/responsemodels.SearchProfile'
      summary: Get a user's search profile
      tags:
      - User Search Profile
    post:
      consumes:
      - application/json
      description: Create a user's search profile
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Search Profile
        in: body
        name: searchProfile
        required: true
        schema:
          $ref: '#/definitions/requestmodels.SearchProfile'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responsemodels.SearchProfile'
      summary: Create a user's search profile
      tags:
      - User Search Profile
    put:
      consumes:
      - application/json
      description: Update a user's search profile
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Search Profile
        in: body
        name: searchProfile
        required: true
        schema:
          $ref: '#/definitions/requestmodels.SearchProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.SearchProfile'
      summary: Update a user's search profile
      tags:
      - User Search Profile
  /user/tenantinfo/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user's tenant info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a user's tenant info
      tags:
      - User Tenant Info
    get:
      consumes:
      - application/json
      description: Get a user's tenant info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/responsemodels.TenantInfo'
      summary: Get a user's tenant info
      tags:
      - User Tenant Info
    post:
      consumes:
      - application/json
      description: Create a user's tenant info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Tenant Info
        in: body
        name: tenantInfo
        required: true
        schema:
          $ref: '#/definitions/requestmodels.TenantInfo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responsemodels.TenantInfo'
      summary: Create a user's tenant info
      tags:
      - User Tenant Info
    put:
      consumes:
      - application/json
      description: Update a user's tenant info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Tenant Info
        in: body
        name: tenantInfo
        required: true
        schema:
          $ref: '#/definitions/requestmodels.TenantInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.TenantInfo'
      summary: Update a user's tenant info
      tags:
      - User Tenant Info
  /user/update:
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requestmodels.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responsemodels.User'
      summary: Update a user
      tags:
      - User
schemes:
- http
swagger: "2.0"
